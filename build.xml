<!--
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.
-->

<project name="lz4" default="dist" basedir="."
    xmlns:cpptasks="antlib:net.sf.antcontrib.cpptasks"
    xmlns:ivy="antlib:org.apache.ivy.ant"
    xmlns:junit4="antlib:com.carrotsearch.junit4"
    xmlns:mvn="antlib:org.apache.maven.artifact.ant">

  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib" location="lib" />

  <property name="ivy.jar.version" value="2.2.0"/>
  <property name="ivy.jar.name" value="ivy-${ivy.jar.version}.jar"/>

  <property name="cpptasks.jar.version" value="1.0b5"/>
  <property name="cpptasks.jar.name" value="cpptasks-${cpptasks.jar.version}.jar" />

  <property name="maven-ant-tasks.jar.version" value="2.1.3" />
  <property name="maven-ant-tasks.jar.name" value="maven-ant-tasks-${maven-ant-tasks.jar.version}.jar" />

  <condition property="platform" value="linux">
   <os name="Linux"/>
  </condition>
  <condition property="platform" value="win32">
   <os family="windows"/>
  </condition>
  <condition property="platform" value="solaris">
   <os name="SunOS"/>
  </condition>
  <condition property="platform" value="mac">
   <os family="mac"/>
  </condition>

  <target name="clean" description="clean working copy">
    <delete dir="${build}" />
    <delete dir="${dist}" />
    <delete dir="${lib}" />
  </target>

  <target name="ivy-bootstrap" description="install ivy" unless="ivy.available">
    <condition property="ivy.available">
      <typefound uri="antlib:org.apache.ivy.ant" name="configure" />
    </condition>
    <antcall target="-ivy-install" />
  </target>

  <target name="-ivy-install" unless="ivy.available">
    <mkdir dir="${user.home}/.ant/lib" />
    <get src="http://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.jar.version}/${ivy.jar.name}" dest="${user.home}/.ant/lib/${ivy.jar.name}"/>
  </target>

  <target name="cpptasks-bootstrap" description="install cpptasks" unless="cpptasks.available">
    <condition property="cpptasks.available">
      <typefound uri="antlib:net.sf.antcontrib.cpptasks" name="cc" />
    </condition>
    <antcall target="-cpptasks-install" />
  </target>

  <target name="-cpptasks-install" unless="cpptasks.available">
    <mkdir dir="${user.home}/.ant/lib" />
    <get src="http://repo1.maven.org/maven2/ant-contrib/cpptasks/${cpptasks.jar.version}/${cpptasks.jar.name}" dest="${user.home}/.ant/lib/${cpptasks.jar.name}"/>
  </target>

  <target name="maven-ant-tasks-bootstrap" description="install maven-ant-tasks" unless="maven-ant-tasks.available">
    <condition property="maven-ant-tasks.available">
      <typefound uri="antlib:org.apache.maven.artifact.ant" name="mvn" />
    </condition>
    <antcall target="-maven-ant-tasks-install" />
  </target>

  <target name="-maven-ant-tasks-install" unless="maven-ant-tasks.available">
    <mkdir dir="${user.home}/.ant/lib" />
    <get src="http://repo1.maven.org/maven2/org/apache/maven/maven-ant-tasks/${maven-ant-tasks.jar.version}/${maven-ant-tasks.jar.name}" dest="${user.home}/.ant/lib/${maven-ant-tasks.jar.name}" />
  </target>

  <target name="init">
    <tstamp />
    <ivy:resolve conf="test" />
    <ivy:retrieve />
  </target>

  <target name="compile-java" depends="init">
    <mkdir dir="${build}/classes" />
    <javac
      includeAntRuntime="false"
      srcdir="${src}/java"
      source="1.6"
      target="1.6"
      encoding="UTF-8"
      debug="true"
      destdir="${build}/classes"/>
  </target>

  <target name="generate-headers" depends="compile-java" unless="${skip.jni}">
    <mkdir dir="${build}/jni-headers" />
    <javah
      destDir="${build}/jni-headers">
      <classpath>
        <pathelement location="${build}/classes/" />
      </classpath>
      <class name="net.jpountz.lz4.LZ4JNI" />
      <class name="net.jpountz.xxhash.XXHashJNI" />
    </javah>
  </target>

  <target name="compile-jni" depends="generate-headers" unless="${skip.jni}">
    <mkdir dir="${build}/objects" />
    <mkdir dir="${build}/jni/${platform}/${os.arch}" />
    <cpptasks:cc
      debug="false"
      optimize="extreme"
      objdir="${build}/objects"
      outfile="${build}/jni/${platform}/${os.arch}/lz4-java"
      outtype="shared">
      <includepath path="${src}/lz4" />
      <includepath path="${src}/xxhash" />
      <includepath path="${java.home}/../include" />
      <includepath path="${java.home}/../include/${platform}/" />
      <includepath path="${build}/jni-headers" />
      <fileset dir="${src}/lz4" includes="lz4.c, lz4hc.c" />
      <fileset dir="${src}/xxhash" includes="xxhash.c" />
      <fileset dir="${src}/jni" includes="*.c" />
      <linker />
    </cpptasks:cc>
  </target>

  <target name="compile" depends="compile-java, compile-jni" />

  <target name="compile-tests" depends="compile">
    <mkdir dir="${build}/test-classes" />
    <javac
      includeAntRuntime="false"
      srcdir="${src}/test"
      encoding="UTF-8"
      debug="true"
      destdir="${build}/test-classes">
      <classpath>
        <path location="${build}/classes" />
        <fileset dir="lib" includes="*.jar" />
      </classpath>
    </javac>
  </target>

  <target name="install-junit4-taskdef" depends="init">
    <taskdef uri="antlib:com.carrotsearch.junit4">
      <classpath>
        <fileset dir="${lib}" includes="*.jar" />
      </classpath>
    </taskdef>
  </target>

  <target name="test" description="run tests" depends="compile-tests, install-junit4-taskdef">
    <mkdir dir="${build}/tests" />
    <junit4:junit4
      dir="${java.io.tmpdir}"
      maxmemory="100m"
      parallelism="auto">
      <assertions>
        <enable package="net.jpountz.lz4"/>
      </assertions>
      <classpath>
        <path location="${src}/test-resources" />
        <path location="${build}/classes" />
        <path location="${build}/test-classes" />
        <path location="${build}/jni" />
        <fileset dir="${lib}" includes="*.jar" />
      </classpath>
      <fileset dir="${build}/test-classes/">
        <include name="**/*Test.class" />
        <exclude name="**/*$*" />
      </fileset>
      <listeners>
        <junit4:report-text
          showThrowable="true"
          showStackTraces="true"
          showOutputStream="true"
          showErrorStream="true"
          showStatusOk="true"
          showStatusError="true"
          showStatusFailure="true"
          showStatusIgnored="true"
          showSuiteSummary="true"
          useSimpleNames="true"
          maxClassNameColumns="80"
          timestamps="true" />
        <!-- For enkins -->
        <junit4:report-ant-xml dir="${build}/tests" />
      </listeners>
    </junit4:junit4>
  </target>

  <target name="sources" description="package sources">
    <mkdir dir="${dist}" />
    <jar
      destfile="${dist}/${ivy.module}-${ivy.revision}-sources.jar">
      <fileset dir="${src}/java" />
    </jar>
  </target>

  <target name="docs" description="generate javadocs">
    <mkdir dir="${build}/docs" />
    <javadoc
        overview="${src}/java/overview.html"
        packagenames="net.jpountz.lz4,net.jpountz.xxhash"
        windowtitle="LZ4 - Java &amp; XXHash - Java APIs"
        destDir="${build}/docs">
      <sourcepath>
        <pathelement location="${src}/java"/>
      </sourcepath>
    </javadoc>
    <mkdir dir="${dist}" />
    <jar
      destfile="${dist}/${ivy.module}-${ivy.revision}-javadoc.jar">
      <fileset dir="${build}/docs" />
    </jar>
  </target>

  <target name="jar" description="generate JAR" depends="compile">
    <mkdir dir="${dist}" />
    <jar
      destfile="${dist}/${ivy.module}-${ivy.revision}.jar">
      <fileset dir="${build}/classes" />
      <fileset dir="${build}/jni" erroronmissingdir="false" />
    </jar>
  </target>

  <target name="makepom" description="generate a pom file">
    <ivy:makepom
        ivyfile="${basedir}/ivy.xml"
        pomfile="${dist}/${ivy.module}-${ivy.revision}.pom"
        templatefile="${src}/build/pom.template">
      <mapping conf="default" scope="compile" />
      <mapping conf="test" scope="test" />
    </ivy:makepom>
  </target>

  <target name="dist" description="package" depends="jar,docs,sources,makepom" />

  <macrodef name="deploy">
    <attribute name="repositoryid" />
    <attribute name="repositoryurl" />
    <sequential>
      <mvn:mvn>
        <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.4:sign-and-deploy-file" />
        <arg value="-Durl=@{repositoryurl}" />
        <arg value="-DrepositoryId=@{repositoryid}" />
        <arg value="-DpomFile=${dist}/${ivy.module}-${ivy.revision}.pom" />
        <arg value="-Dfile=${dist}/${ivy.module}-${ivy.revision}.jar" />
        <arg value="-Dfiles=${dist}/${ivy.module}-${ivy.revision}-sources.jar,${dist}/${ivy.module}-${ivy.revision}-javadoc.jar" />
        <arg value="-Dclassifiers=sources,javadoc" />
        <arg value="-Dtypes=jar,jar" />
        <arg value="-Pgpg" />
      </mvn:mvn>
    </sequential>
  </macrodef>

  <target name="deploy" description="deploy snapshot to snapshot repo">
    <property name="skip.jni" value="true" />
    <antcall target="-deploy" />
  </target>

  <target name="-deploy" depends="clean,dist">
    <deploy repositoryid="sonatype-nexus-snapshots" repositoryurl="https://oss.sonatype.org/content/repositories/snapshots/" />
  </target>

  <!-- before this, update project version from SNAPSHOT to RELEASE -->
  <target name="stage" description="deploy snapshot to snapshot repo">
    <property name="skip.jni" value="true" />
    <antcall target="-stage" />
  </target>

  <target name="-stage" depends="clean,dist">
    <deploy repositoryid="sonatype-nexus-staging" repositoryurl="https://oss.sonatype.org/service/local/staging/deploy/maven2/" />
  </target>

</project>
